package vm

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"time"

	"golang.org/x/net/context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/swag"

	strfmt "github.com/go-openapi/strfmt"
)

// NewFindVmsByStatesParams creates a new FindVmsByStatesParams object
// with the default values initialized.
func NewFindVmsByStatesParams() *FindVmsByStatesParams {
	var ()
	return &FindVmsByStatesParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewFindVmsByStatesParamsWithTimeout creates a new FindVmsByStatesParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewFindVmsByStatesParamsWithTimeout(timeout time.Duration) *FindVmsByStatesParams {
	var ()
	return &FindVmsByStatesParams{

		timeout: timeout,
	}
}

// NewFindVmsByStatesParamsWithContext creates a new FindVmsByStatesParams object
// with the default values initialized, and the ability to set a context for a request
func NewFindVmsByStatesParamsWithContext(ctx context.Context) *FindVmsByStatesParams {
	var ()
	return &FindVmsByStatesParams{

		Context: ctx,
	}
}

/*FindVmsByStatesParams contains all the parameters to send to the API endpoint
for the find vms by states operation typically these are written to a http.Request
*/
type FindVmsByStatesParams struct {

	/*States
	  States to filter by

	*/
	States []string

	timeout time.Duration
	Context context.Context
}

// WithTimeout adds the timeout to the find vms by states params
func (o *FindVmsByStatesParams) WithTimeout(timeout time.Duration) *FindVmsByStatesParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the find vms by states params
func (o *FindVmsByStatesParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the find vms by states params
func (o *FindVmsByStatesParams) WithContext(ctx context.Context) *FindVmsByStatesParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the find vms by states params
func (o *FindVmsByStatesParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithStates adds the states to the find vms by states params
func (o *FindVmsByStatesParams) WithStates(states []string) *FindVmsByStatesParams {
	o.SetStates(states)
	return o
}

// SetStates adds the states to the find vms by states params
func (o *FindVmsByStatesParams) SetStates(states []string) {
	o.States = states
}

// WriteToRequest writes these params to a swagger request
func (o *FindVmsByStatesParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	r.SetTimeout(o.timeout)
	var res []error

	valuesStates := o.States

	joinedStates := swag.JoinByFormat(valuesStates, "multi")
	// query array param states
	if err := r.SetQueryParam("states", joinedStates...); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
